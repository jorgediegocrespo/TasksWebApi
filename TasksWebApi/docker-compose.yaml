version: '3.9'
name: tasks-dev
services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Sql_S3rv3r
    ports:
      - "1433:1433"
    volumes:
      - ./tools/mssql/data:/var/opt/mssql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Sql_S3rv3r -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
      
  sqlserver.configurator:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver-configurator
    volumes:
      - ./tools/mssql/init:/docker-entrypoint-initdb.d
    depends_on:
      sqlserver:
        condition: service_healthy
    restart: no
    command: >
      bash -c '
      /opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P Sql_S3rv3r -d master -i docker-entrypoint-initdb.d/init.sql;
      echo "All done!"
      '
      
  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./tools/redis/data:/data
    
  vault:
    image: vault:1.13.3
    container_name: vault
    restart: always
    ports:
      - "8200:8200"
    environment:
      VAULT_ADDR: "http://127.0.0.1:8200"
      # in production scenarios the token mechanisim for loggin will be forbidden,
      # it cannot be in source control.
      VAULT_TOKEN: '26cbb583-b78a-41f4-8678-1926a92e47a6'
      VAULT_DEV_ROOT_TOKEN_ID: '26cbb583-b78a-41f4-8678-1926a92e47a6'
    volumes:
      - ./tools/vault/data:/vault/file
    cap_add:
      - IPC_LOCK